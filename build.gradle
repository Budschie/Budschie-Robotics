/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    // We need this for deploying
    id 'org.hidetake.ssh' version '2.10.1'
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven { url = 'https://jitpack.io' }
    jcenter()
}

dependencies
{
    implementation 'com.github.ev3dev-lang-java:ev3dev-lang-java:2.4.13'
}

version '1.0'

jar {
    manifest {
        attributes(
                'Main-Class': 'de.budschie.robotics.Main'
        )
    }
}

remotes {
    ev3 {
        host = 'ev3dev'
        user = 'robot'
        // Set this to whatever your path is
        // Uncomment the line below if you want to use an password instead:
        // password = 'this is your surely very secure password1234!'
        identity = file('C:/Users/Budschie/.keys/ev3-id')
    }
}

task deploy {
    dependsOn 'jar'
    doLast {
        println 'Deploying files...'
        ssh.run {
            session(remotes.ev3) {
                /* groovylint-disable-next-line GStringExpressionWithinString */
                // execute 'mkdir project.name + '-' + project.version'
                execute 'rm -r ' + project.name + '; mkdir ' + project.name
                put from: file('build/libs/' + project.name + '-' + project.version + '.jar'), into: '/home/robot/' + project.name
                
                // This may be a bit dirty, but cmon, I am a noob
                execute 'echo java -jar ' + project.name + '-' + project.version + '.jar > ' + project.name + '/run.sh'
                
                // We couldn't execute this file before, but with this, we grant ourselves full rights on this file
                execute 'chmod u+rwx ' + project.name + '/run.sh'
               // execute 'echo java -jar compiledJars/' + roject.name + '-' + project.version + '.jar > run' + project.name + project.version
            }
        }
        println 'Deployed files.'
    }
}
